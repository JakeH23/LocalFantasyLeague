@page "/teams/delete/{Id:int}"
@inject IDbContextFactory<LocalFantasyLeagueContext> DbFactory
@inject NavigationManager Nav

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Team</h2>
    <hr />
    @if (team is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@team.Name</dd>
        </dl>
        <EditForm method="post" Model="team" OnValidSubmit="DeleteTeam" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(team is null)">Delete</button> |
            <a href="/teams">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Team? team;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        team = await context.Teams.FirstOrDefaultAsync(m => m.Id == Id);

        if (team is null)
        {
            Nav.NavigateTo("notfound");
        }
    }

    private async Task DeleteTeam()
    {
        using var context = DbFactory.CreateDbContext();
        context.Teams.Remove(team!);
        await context.SaveChangesAsync();
        Nav.NavigateTo("/teams");
    }
}

