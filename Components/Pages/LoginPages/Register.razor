@page "/register"
@rendermode InteractiveServer

<div class="register-container">
    <div class="register-card">
        <h3 class="text-center">Register</h3>

        @if (_errorMessage is not null)
        {
            <p class="error-message">@_errorMessage</p>
        }

        <EditForm method="post" Model="_registerModel" OnValidSubmit="HandleRegister" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="username">Username</label>
                <InputText id="username" class="form-control" @bind-Value="_registerModel.Username" placeholder="Enter your username" />
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <InputText id="password" class="form-control" @bind-Value="_registerModel.Password" type="password" placeholder="Enter your password" />
            </div>

            <div class="form-group">
                <label for="confirm-password">Confirm Password</label>
                <InputText id="confirm-password" class="form-control" @bind-Value="_registerModel.ConfirmPassword" type="password" placeholder="Confirm your password" />
            </div>

            <div class="form-group">
                <label for="team">Select Team</label>
                <InputSelect id="team" class="form-control" @bind-Value="_registerModel.TeamId">
                    <option value="">-- Select a Team --</option>
                    @foreach (var team in _teams)
                    {
                        <option value="@team.Id">@team.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="form-group">
                <label for="player">Select Player</label>
                <InputSelect id="player" class="form-control" @bind-Value="_registerModel.PlayerId">
                    <option value="">-- Select a Player --</option>
                    @foreach (var player in _players)
                    {
                        <option value="@player.Id">@player.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="form-group text-center">
                <button type="submit" class="btn btn-primary">Register</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private readonly RegisterModel _registerModel = new();
    private string? _errorMessage;
    private List<Team> _teams = [];
    private List<Player> _players = [];

    protected override async Task OnInitializedAsync()
    {
        _teams = await DataService.GetAllAsync<Team>();
        _players = await DataService.GetAllAsync<Player>();
    }

    private async Task HandleRegister()
    {
        _errorMessage = null;

        if (_registerModel.Password != _registerModel.ConfirmPassword)
        {
            _errorMessage = "Passwords do not match.";
            return;
        }

        if (await UserService.UserExistsAsync(_registerModel.Username))
        {
            _errorMessage = "Username already exists.";
            return;
        }

        var user = new User
            {
                Username = _registerModel.Username,
                PasswordHash = UserService.ComputeSha256Hash(_registerModel.Password),
                TeamId = _registerModel.TeamId == 0 ? null : _registerModel.TeamId,
                PlayerId = _registerModel.PlayerId == 0 ? null : _registerModel.PlayerId
            };

        await DataService.AddAsync(user);

        Navigation.NavigateTo("/login");
    }
}
