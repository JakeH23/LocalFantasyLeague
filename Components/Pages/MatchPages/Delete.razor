@page "/matches/delete/{Id:int}"
@inject IDbContextFactory<LocalFantasyLeague.Data.LocalFantasyLeagueContext> DbFactory
@inject NavigationManager NavigationManager

<h3>Delete Match</h3>

@if (Match == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>Are you sure you want to delete this match?</p>
    <p><strong>@Match.HomeTeam.Name</strong> vs <strong>@Match.AwayTeam.Name</strong> on <strong>@Match.Kickoff.ToString("g")</strong></p>

    <EditForm method="post" Model="Match" OnValidSubmit="DeleteMatch" FormName="delete" Enhance>
        <button type="submit" class="btn btn-danger" disabled="@(Match is null)">Delete</button> |
        <a href="/matches">Back to List</a>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    private Match? Match;
    private LocalFantasyLeagueContext context = default!;

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        Match = await context.Matches
            .Include(m => m.HomeTeam)
            .Include(m => m.AwayTeam)
            .FirstOrDefaultAsync(m => m.Id == Id);
    }

    private async Task DeleteMatch()
    {
        if (Match is not null)
        {
            context.Matches.Remove(Match);
            await context.SaveChangesAsync();
        }
        NavigationManager.NavigateTo("/matches");
    }
}

