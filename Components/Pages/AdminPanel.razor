@page "/admin"
@inject LocalFantasyLeagueContext Db
@inject UserSession UserSession

<h3 class="text-center my-4 text-danger">Admin: Actions to Complete</h3>

<!-- Actions to Complete Section -->
@if (MatchesToComplete.Any())
{
    <div class="table-responsive mb-5">
        <table class="table table-striped table-hover table-bordered">
            <thead class="bg-light text-dark">
                <tr>
                    <th>Kickoff</th>
                    <th>Match</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var match in MatchesToComplete)
                {
                    <tr>
                        <td>@match.Kickoff.ToString("d")</td>
                        <td>@match.HomeTeam.Name vs @match.AwayTeam.Name</td>
                        <td>
                            <a href="/matches/edit/@match.Id" class="btn btn-outline-danger btn-sm">Edit Match</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else if (MatchesNeedingSelections.Any())
{
    <h4 class="text-warning">Upcoming Matches Needing Selections</h4>
    <div class="table-responsive mb-5">
        <table class="table table-striped table-hover table-bordered">
            <thead class="bg-light text-dark">
                <tr>
                    <th>Kickoff</th>
                    <th>Match</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var match in MatchesNeedingSelections)
                {
                    <tr>
                        <td>@match.Kickoff.ToString("d")</td>
                        <td>@match.HomeTeam.Name vs @match.AwayTeam.Name</td>
                        <td>
                            <a href="/user-fantasy/create/@match.Id" class="btn btn-outline-warning btn-sm">Create Selection</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-success">You have no actions to complete</div>
}

@code {
    private List<Match> Matches = new();
    private List<Match> MatchesToComplete = new();
    private List<Match> MatchesNeedingSelections = new();

    protected override async Task OnInitializedAsync()
    {
        // Load all matches
        Matches = await Db.Matches
            .Include(m => m.HomeTeam)
            .Include(m => m.AwayTeam)
            .Include(m => m.Stats)
            .ToListAsync();

        // Filter matches that need actions (no stats)
        MatchesToComplete = Matches
            .Where(m => m.Kickoff < DateTime.Now && !m.Stats.Any())
            .ToList();

        // Filter upcoming matches in the next 7 days where the user has not created a selection
        var upcomingMatches = Matches
            .Where(m => m.Kickoff >= DateTime.Now && m.Kickoff <= DateTime.Now.AddDays(7))
            .ToList();

        var userSelections = await Db.UserFantasySelections
            .Where(s => s.UserId == UserSession.CurrentUser.Id)
            .Select(s => s.MatchId)
            .ToListAsync();

        MatchesNeedingSelections = upcomingMatches
            .Where(m => !userSelections.Contains(m.Id))
            .ToList();
    }
}
