@page "/players/details/{id:int}"
@rendermode InteractiveServer

<h3 class="text-center my-4">Player Details</h3>

@if (Player == null)
{
    <div class="d-flex justify-content-center my-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="container">
        <!-- Player Information -->
        <div class="card mb-4">
            <div class="card-header">
                <h4>
                    <button class="btn btn-link text-decoration-none" type="button" data-bs-toggle="collapse" data-bs-target="#playerInfo" aria-expanded="true" aria-controls="playerInfo">
                        Player Information
                    </button>
                </h4>
            </div>
            <div id="playerInfo" class="collapse show">
                <div class="card-body">
                    <p><strong>Name:</strong> @Player.Name</p>
                    <p><strong>Position:</strong> @Player.Position</p>
                    <p><strong>Team:</strong> @(Player.Team?.Name ?? "No Team")</p>
                </div>
            </div>
        </div>

        <!-- Match Stats by Season -->
        @if (StatsBySeason.Any())
        {
            @foreach (var seasonStats in StatsBySeason)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>
                            <button class="btn btn-link text-decoration-none" type="button" data-bs-toggle="collapse" data-bs-target="#seasonStats-@seasonStats.Season.Id" aria-expanded="true" aria-controls="seasonStats-@seasonStats.Season.Id">
                                @seasonStats.Season.Name (@seasonStats.Season.StartDate.ToString("dd/MM/yyyy") - @seasonStats.Season.EndDate.ToString("dd/MM/yyyy"))
                            </button>
                        </h4>
                    </div>
                    <div id="seasonStats-@seasonStats.Season.Id" class="collapse show">
                        <div class="card-body">
                            @if (seasonStats.PaginatedStats.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-striped table-hover table-bordered">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Match</th>
                                                <th>Kickoff</th>
                                                <th>Appearances</th>
                                                <th>Goals</th>
                                                <th>Assists</th>
                                                <th>Yellow Cards</th>
                                                <th>Red Cards</th>
                                                <th>Penalty Saves</th>
                                                <th>Clean Sheets</th>
                                                <th>Penalty Missed</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var stat in seasonStats.PaginatedStats)
                                            {
                                                <tr>
                                                    <td>@stat.Match?.HomeTeam?.Name vs @stat.Match?.AwayTeam?.Name</td>
                                                    <td>@stat.Match?.Kickoff.ToString("g")</td>
                                                    <td>
                                                        @if (stat.Appearance)
                                                        {
                                                            <i class="fas fa-check text-success"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="fas fa-times text-danger"></i>
                                                        }
                                                    </td>
                                                    <td>@stat.Goals</td>
                                                    <td>@stat.Assists</td>
                                                    <td>
                                                        @if (stat.YellowCard)
                                                        {
                                                            <i class="fas fa-check text-success"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="fas fa-times text-danger"></i>
                                                        }
                                                    </td>
                                                    <td>
                                                        @if (stat.RedCard)
                                                        {
                                                            <i class="fas fa-check text-success"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="fas fa-times text-danger"></i>
                                                        }
                                                    </td>
                                                    <td>@stat.PenaltySaves</td>
                                                    <td>
                                                        @if (stat.CleanSheet)
                                                        {
                                                            <i class="fas fa-check text-success"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="fas fa-times text-danger"></i>
                                                        }
                                                    </td>
                                                    <td>@stat.PenaltyMissed</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                                <div class="d-flex justify-content-center mt-3">
                                    <nav>
                                        <ul class="pagination">
                                            <li class="page-item @(seasonStats.IsFirstPage ? "disabled" : "")">
                                                <button class="page-link" @onclick="() => PreviousPage(seasonStats)" disabled="@seasonStats.IsFirstPage">
                                                    <i class="bi bi-arrow-left"></i> Previous
                                                </button>
                                            </li>
                                            <li class="page-item disabled">
                                                <span class="page-link">Page @seasonStats.CurrentPage of @seasonStats.TotalPages</span>
                                            </li>
                                            <li class="page-item @(seasonStats.IsLastPage ? "disabled" : "")">
                                                <button class="page-link" @onclick="() => NextPage(seasonStats)" disabled="@seasonStats.IsLastPage">
                                                    Next <i class="bi bi-arrow-right"></i>
                                                </button>
                                            </li>
                                        </ul>
                                    </nav>
                                </div>

                                <h6>Total Stats for @seasonStats.Season.Name</h6>
                                <div id="seasonTotalStats-@seasonStats.Season.Id">
                                    <table class="table table-striped table-hover table-bordered">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Appearances</th>
                                                <th>Goals</th>
                                                <th>Assists</th>
                                                <th>Yellow Cards</th>
                                                <th>Red Cards</th>
                                                <th>Penalty Saves</th>
                                                <th>Clean Sheets</th>
                                                <th>Penalty Missed</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>@seasonStats.TotalAppearances</td>
                                                <td>@seasonStats.TotalGoals</td>
                                                <td>@seasonStats.TotalAssists</td>
                                                <td>@seasonStats.TotalYellowCards</td>
                                                <td>@seasonStats.TotalRedCards</td>
                                                <td>@seasonStats.TotalPenaltySaves</td>
                                                <td>@seasonStats.TotalCleanSheets</td>
                                                <td>@seasonStats.TotalPenaltyMissed</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <p>No match stats available for this season.</p>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No match stats available for this player.</p>
        }

        <!-- Total Combined Stats -->
        <div class="card mb-4">
            <div class="card-header">
                <h4>
                    <button class="btn btn-link text-decoration-none" type="button" data-bs-toggle="collapse" data-bs-target="#totalStats" aria-expanded="true" aria-controls="totalStats">
                        All-Time Stats
                    </button>
                </h4>
            </div>
            <div id="totalStats" class="collapse show">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover table-bordered">
                            <thead class="table-dark">
                                <tr>
                                    <th>Appearances</th>
                                    <th>Goals</th>
                                    <th>Assists</th>
                                    <th>Yellow Cards</th>
                                    <th>Red Cards</th>
                                    <th>Penalty Saves</th>
                                    <th>Clean Sheets</th>
                                    <th>Penalty Missed</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>@TotalAppearances</td>
                                    <td>@TotalGoals</td>
                                    <td>@TotalAssists</td>
                                    <td>@TotalYellowCards</td>
                                    <td>@TotalRedCards</td>
                                    <td>@TotalPenaltySaves</td>
                                    <td>@TotalCleanSheets</td>
                                    <td>@TotalPenaltyMissed</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    internal Player? Player { get; set; }
    internal List<SeasonStats> StatsBySeason { get; set; } = new();

    internal int TotalAppearances => Player?.PerformanceStats?.Count(s => s.Appearance) ?? 0;
    internal int TotalGoals => Player?.PerformanceStats?.Sum(s => s.Goals) ?? 0;
    internal int TotalAssists => Player?.PerformanceStats?.Sum(s => s.Assists) ?? 0;
    internal int TotalYellowCards => Player?.PerformanceStats?.Count(s => s.YellowCard) ?? 0;
    internal int TotalRedCards => Player?.PerformanceStats?.Count(s => s.RedCard) ?? 0;
    internal int TotalPenaltySaves => Player?.PerformanceStats?.Sum(s => s.PenaltySaves) ?? 0;
    internal int TotalCleanSheets => Player?.PerformanceStats?.Count(s => s.CleanSheet) ?? 0;
    internal int TotalPenaltyMissed => Player?.PerformanceStats?.Sum(s => s.PenaltyMissed) ?? 0;

    protected override async Task OnInitializedAsync()
    {
        // Fetch player details asynchronously
        Player = await PlayerService.GetPlayerIncludingTeamAndStatDetailsAcrossMatchAndSeason(Id);

        if (Player?.PerformanceStats != null)
        {
            // Group performance stats by season and fetch season details in parallel
            var seasonGroups = Player.PerformanceStats
                .Where(ps => ps.Match?.Season != null && ps.Appearance)
                .GroupBy(ps => ps.Match!.Season!.Id);

            var seasonTasks = seasonGroups.Select(async group =>
            {
                var season = await SeasonService.GetSeasonBySeasonId(group.Key);
                return new SeasonStats
                    {
                        Season = season!,
                        Stats = group.ToList()
                    };
            });

            // Await all season tasks and order by start date
            StatsBySeason = (await Task.WhenAll(seasonTasks))
                .OrderByDescending(ss => ss.Season.StartDate)
                .ToList();
        }
    }

    private void NextPage(SeasonStats seasonStats)
    {
        if (!seasonStats.IsLastPage)
        {
            seasonStats.CurrentPage++;
            StateHasChanged();
        }
    }

    private void PreviousPage(SeasonStats seasonStats)
    {
        if (!seasonStats.IsFirstPage)
        {
            seasonStats.CurrentPage--;
            StateHasChanged();
        }
    }
}
