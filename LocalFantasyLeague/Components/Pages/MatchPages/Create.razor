@page "/matches/create"
@rendermode InteractiveServer

<h3>Create Match</h3>

<div class="row">
    <div class="col-md-6">
        <EditForm method="post" Model="_match" OnValidSubmit="HandleSubmit" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="mb-3">
                <label for="homeTeam">Home Team</label>
                <select id="homeTeam" class="form-select" @bind="_match.HomeTeamId">
                    <option value="">-- Select Home Team --</option>
                    @foreach (var team in _teams)
                    {
                        <option value="@team.Id">@team.Name</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label for="awayTeam">Away Team</label>
                <select id="awayTeam" class="form-select" @bind="_match.AwayTeamId">
                    <option value="">-- Select Away Team --</option>
                    @foreach (var team in _teams)
                    {
                        <option value="@team.Id">@team.Name</option>
                    }
                </select>
            </div>

            <div class="mb-3">
                <label for="matchDate">Match Date</label>
                <input id="matchDate" type="date" class="form-control" @bind="_selectedDate" />
            </div>

            <div class="mb-3">
                <label for="matchTime">Match Time</label>
                <select id="matchTime" class="form-select" @bind="_selectedTime">
                    <option value="19:00">7:00 PM</option>
                    <option value="19:30">7:30 PM</option>
                    <option value="20:00">8:00 PM</option>
                    <option value="20:30">8:30 PM</option>
                </select>
            </div>

            <button type="submit" class="btn btn-success">Save</button>
        </EditForm>
    </div>
</div>

@code {
    private readonly Match _match = new();
    private List<Team> _teams = [];
    private DateTime _selectedDate = DateTime.Today;
    private string _selectedTime = "19:00";

    protected override async Task OnInitializedAsync()
    {
        _teams = await DataService.GetAllAsync<Team>();
    }

    private async Task HandleSubmit()
    {
        // Combine the selected date and time into the Match.Kickoff property
        _match.Kickoff = DateTime.Parse($"{_selectedDate:yyyy-MM-dd} {_selectedTime}");

        // Fetch all seasons
        var seasons = await DataService.GetAllAsync<Season>();

        // Find the season that matches the kickoff date
        var matchingSeason = seasons.FirstOrDefault(season =>
            _match.Kickoff >= season.StartDate && _match.Kickoff <= season.EndDate);

        if (matchingSeason != null)
        {
            _match.SeasonId = matchingSeason.Id;
        }
        else
        {
            // Handle the case where no matching season is found
            // For example, show an error message or set a default value
            throw new InvalidOperationException("No matching season found for the selected match date. Please ensure season is created.");
        }

        // Save the match to the database
        await DataService.AddAsync(_match);

        // Navigate back to the matches list
        Navigation.NavigateTo("/matches");
    }

}